#!/usr/bin/env python

if __name__ == "__main__":
    import os
    import argparse
    import numpy as np
    import pandas as pd
    import subprocess

    parser = argparse.ArgumentParser(description='Keras train pairs for each layer-pairs')
    add_arg = parser.add_argument
    add_arg('config', type=str, help='data configuration, configs/data.yaml')

    args = parser.parse_args()
    config_dir = args.config

    import yaml
    assert(os.path.exists(config_dir))
    with open(config_dir) as f:
        config = yaml.load(f)


    mk_cfg = config['doublets_for_graph']
    evtid = mk_cfg['evtid']
    threshold_file = os.path.expandvars(mk_cfg['threshold'])
    df_threshold = pd.read_csv(threshold_file, sep=' ', header=None,
                               names=["idx", "in", "out", "cut", "eff", "purity", "n_true", "n_fake"])
    print(df_threshold.shape)

    output_dir = os.path.expandvars(mk_cfg['selected'])
    os.makedirs(output_dir, exist_ok=True)

    raw_pairs_dir = os.path.join(output_dir, 'raw_pairs')
    cmd_raw_pairs = ['make_pairs_for_training_segments', config_dir, str(evtid)]
    print(" ".join(cmd_raw_pairs))
    #ck_code = subprocess.call(cmd_raw_pairs)
    #print('results', ck_code)
    #exit()

    from heptrkx import layer_pairs
    selected_pairs_dir = os.path.join(output_dir, 'selected_pairs', 'evt{}'.format(evtid))
    for ii, layer_pair in enumerate(layer_pairs):
        file_name = os.path.join(raw_pairs_dir, 'evt{}'.format(evtid), 'pair{:03d}.h5'.format(ii))
        try:
            cmd_sel_pairs =['select_pairs', config_dir, str(ii),
                            str(df_threshold[df_threshold.idx == ii]['cut'].values[0])]
            print(" ".join(cmd_sel_pairs))
        except IndexError:
            print("pair {}-{}-{} is missing MODEL".format(ii, *layer_pair))
        ck_code = subprocess.call(cmd_sel_pairs)
        print("pair selection:", ck_code)
